/*-------------------------*\
 * MEDIA QUERIES */
/*------------------------- */

// Acceptable values
// 480px  : mobile
// 640px  : tablet small
// 768px  : tablet
// 960px  : tablet medium
// 1024px : tablet large
// 1100px : desktop
// 1280px : desktop large

@mixin min-width($min) {
  @media screen and (min-width: $min) {
    @content;
  }
}

@mixin max-width($max) {
  @media screen and (max-width: $max) {
    @content;
  }
}

@mixin screen($min, $max) {
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin landscape {
  @media only screen and (orientation: landscape) {
    @content;
  }
}

@mixin portrait {
  @media only screen and (orientation: portrait) {
    @content;
  }
}

@mixin retina {
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
    @content;
  }
}

/*-------------------------*\
 * BOX-MODEL */
/*------------------------- */
@mixin box-sizing($boxmodel: border-box) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

/*-------------------------*\
 * CLEARFIX */
/*------------------------- */
@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*-------------------------*\
 * VISIBILITY */
/*------------------------- */
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

/*-------------------------*\
 * USER-SELECT */
/*------------------------- */
@mixin user-select($select) {
  -webkit-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;
  -o-user-select: $select;
  user-select: $select;
}

/*-------------------------*\
 * TYPOGRAPHY */
/*------------------------- */
@mixin font-smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

@mixin text-overflow {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
  -moz-hyphens: $mode;
  -ms-hyphens: $mode;
  -o-hyphens: $mode;
  hyphens: $mode;
}

@mixin pre {
  white-space: pre;
  white-space: -moz-pre-wrap;
  white-space: pre-wrap;
  white-space: pre\9;
  word-break: break-all;
  word-wrap: break-word;
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
    opacity: 1;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

/*-------------------------*\
 * BACKGROUND-COVER */
/*------------------------- */
@mixin background-cover {
  background-size: 100%;
  background-size: cover;
  background-position: center 15%;
  background-repeat: no-repeat;
}

/*-------------------------*\
 * BORDER-RADIUS */
/*------------------------- */
@mixin border-radius($radius: 2px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

/*-------------------------*\
 * BOX-SHADOW */
/*------------------------- */
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

/*-------------------------*\
 * GRADIENTS */
/*------------------------- */
@mixin linear-gradient($start-color, $end-color) {
  background: -webkit-linear-gradient($start-color, $end-color);
  background: -moz-linear-gradient($start-color, $end-color);
  background: -o-linear-gradient($start-color, $end-color);
  background: -ms-linear-gradient($start-color, $end-color);
  background: linear-gradient($start-color, $end-color);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$start-color', endColorstr='$end-color', GradientType=1);
}

@mixin gradient-directional-four-colors($angle, $start-color, $start-location, $mid-color, $mid-location, $mid-color-2, $mid-location-2, $end-color, $end-location) {
  background: $mid-color-2;
  background: -webkit-linear-gradient($angle, $start-color $start-location, $mid-color $mid-location, $mid-color-2 $mid-location-2, $end-color $end-location);
  background: -moz-linear-gradient($angle, $start-color $start-location, $mid-color $mid-location, $mid-color-2 $mid-location-2, $end-color $end-location);
  background: -o-linear-gradient($angle, $start-color $start-location, $mid-color $mid-location, $mid-color-2 $mid-location-2, $end-color $end-location);
  background: -ms-linear-gradient($angle, $start-color $start-location, $mid-color $mid-location, $mid-color-2 $mid-location-2, $end-color $end-location);
  background: linear-gradient($angle, $start-color $start-location, $mid-color $mid-location, $mid-color-2 $mid-location-2, $end-color $end-location);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$start-color', endColorstr='$end-color', GradientType=1);
}

/*-------------------------*\
 * FILTERS */
/*------------------------- */
@mixin filter($filter-type, $filter-amount) {
  -webkit-filter: $filter-type + unquote("(#{$filter-amount})");
  -moz-filter: $filter-type + unquote("(#{$filter-amount})");
  -ms-filter: $filter-type + unquote("(#{$filter-amount})");
  -o-filter: $filter-type + unquote("(#{$filter-amount})");
  filter: $filter-type + unquote("(#{$filter-amount})");
}

@mixin blur($blur) {
  @include translate3d;
  @include filter(blur($blur));
  filter: url(/svg/blur.svg#blur);
  filter: progid:DXImageTransform.Microsoft.Blur(pixelradius='32');
}

/*-------------------------*\
 * TRANSFORMERS ;) */
/*------------------------- */
@mixin transform($content) {
  -webkit-transform: $content;
  -moz-transform: $content;
  -ms-transform: $content;
  -o-transform: $content;
  transform: $content;
}

@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}

/*-------------------------*\
 * FLIPPER DA DOLPHIN */
/*------------------------- */
@mixin flipY {
  @include transform(scaleY(-1));
  -ms-filter: "FlipV";
  filter: FlipV;
}

@mixin flipX {
  @include transform(scaleX(-1));
  -ms-filter: "FlipH";
  filter: FlipH;
}

/*-------------------------*\
 * ROTATIONS */
/*------------------------- */
@mixin rotate($degrees, $origin: null) {
  @include transform(rotate($degrees));
  @include transform-origin($origin);
}

@mixin rotateX($degrees) {
  @include transform(rotateX($degrees));
}

@mixin rotateY($degrees) {
  @include transform(rotateY($degrees));
}

/*-------------------------*\
 * MORPHING */
/*------------------------- */
@mixin scale($scale-args) {
  @include transform(scale($scale-args));
}

@mixin skew($x, $y) {
  @include transform(skew($x, $y));
}

/*-------------------------*\
 * TRANSLATIONS */
/*------------------------- */
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

@mixin translateX($x) {
  @include transform(translateX($x));
}

@mixin translateY($y) {
  @include transform(translateY($y));
}

@mixin translateZ($z) {
  @include transform(translateZ($z));
}

@mixin translate3d($x: 0, $y: 0, $z: 0) {
  @include transform(translate3d($x, $y, $z));
}

/*-------------------------*\
 * TRANSITIONS */
/*------------------------- */
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transition-property($transition-property) {
  -webkit-transition-property: $transition-property;
  -moz-transition-property: $transition-property;
  -o-transition-property: $transition-property;
  transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  -ms-transition-delay: $transition-delay;
  -o-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
  -webkit-transition-duration: $transition-duration;
  -moz-transition-duration: $transition-duration;
  -o-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}

/*-------------------------*\
 * PERSPECTIVES */
/*------------------------- */
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}

@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}

/*-------------------------*\
 * ANIMATIONS */
/*------------------------- */
@mixin animation($animation) {
  -webkit-animation: $animation;
  -moz-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  -o-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -o-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
  -moz-animation-timing-function: $timing-function;
  -o-animation-timing-function: $timing-function;
  animation-timing-function: $timing-function;
}

@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
  -moz-animation-iteration-count: $iteration-count;
  -o-animation-iteration-count: $iteration-count;
  animation-iteration-count: $iteration-count;
}

@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
  -moz-animation-direction: $direction;
  -o-animation-direction: $direction;
  animation-direction: $direction;
}

/*-------------------------*\
 * KEYFRAMES */
/*------------------------- */
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }

  @-moz-keyframes #{$animationName} {
    @content;
  }

  @-o-keyframes #{$animationName} {
    @content;
  }

  @keyframes #{$animationName} {
    @content;
  }
}
